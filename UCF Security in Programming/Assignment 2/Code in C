//Assignment: pa02 - Calculating an 8, 16, or 32 bit checksum on an ASCII input file
//Author: Daniel Clamens
//Language: c

#include <stdio.h>
#include <stdlib.h>
#include <stdint.h>
#include <string.h>


void InputString(char *str)
{
for (int i = 0; i < strlen(str); i++){

	if (i <= 80){
		printf("\n");
		printf("%c",str[i]);
		}
	}
}

// Calculate 8 bit checksum from the input string
unsigned long int checksumEight(char *input)
{
int result = 0;
for (int i = 0; i < strlen(input); i++){
	result += input[i];
	}

return result;
}

// Calculate 16 bit checksum from the input string
unsigned long int checksumSixteen(char *input)
{
int result = 0;
for (int i = 0; i < strlen(input);)
{
result += input[i] << 8;
result += (input[i + 1]);
i+=2;
}

return result;
}

// Calculate 32 bit checksum from the input string
unsigned long int checksumThirtyTwo(char *input)
{
unsigned long int result = 0;
for (int i = 0; i < strlen(input);)
{
result += input[i] << 24;
result += (input[i + 1]) << 16;
result += (input[i + 2]) << 8;
result += (input[i + 3]);
i += 4;
}

return result;
}

int main(int argc, char **argv){

FILE *inputfile;

char *input, *output, *checksum, Pad = 'x';
int i = 0;
int checksumSize = 0;
unsigned long int EightResult = 0;
unsigned long int SixteenResult = 0;
unsigned long int ThirtyTwoResult = 0;

checksumSize = atoi(argv[2]);
if (!(checksumSize == 8 || checksumSize == 16 || checksumSize == 32))
{
fprintf(stderr,"Valid checksum sizes are 8, 16, or 32\n");
return -1;
}

// Read in the input file
input = malloc(sizeof(char) * 1024);
while (fscanf(inputfile, "%c", &Pad) != EOF && i < 1024)
{
input[i] = Pad;
i++;
}
input[i] = '\0';

// Close the file
fclose(inputfile);

switch (checksumSize)
{
case 8:
EightResult = checksumEight(input);
InputString(input);

printf("\n");
printf("%2d bit checksum is %8lx for all %4d chars\n", checksumSize, EightResult & 0xff, (int)strlen(input));

break;

case 16:
if (strlen(input) % 2){
	strcat(input,"X");
}
SixteenResult = checksumSixteen(input);
InputString(input);

printf("\n");
printf("%2d bit checksum is %8lx for all %4d chars\n", checksumSize, SixteenResult & 0xffff, (int)strlen(input));

break;

case 32:
while (strlen(input) % 4){
	strcat(input,"X");
}
ThirtyTwoResult = checksumThirtyTwo(input);
InputString(input);

printf("\n");
printf("%2d bit checksum is %8lx for all %4d chars\n", checksumSize, ThirtyTwoResult & 0xffffffff, (int)strlen(input));

break;
}

return 0;
}

/*I Daniel Clamens (da761465) affirm that this program is
| entirely my own work and that I have neither developed my code together with
| any another person, nor copied any code from any other person, nor permitted
| my code to be copied or otherwise used by any other person, nor have I
| copied, modified, or otherwise used programs created by others. I acknowledge
CIS3360-McAlpin PA 2 4
| that any violation of the above terms will be treated as academic dishonesty.
+============================================================================ */

